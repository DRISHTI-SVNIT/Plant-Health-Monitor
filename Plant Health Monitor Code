
/*
 * LCD full.c
 *
 * Created: 31-01-2017 15:40:36
 * Author : DELL
 */ 
#define F_CPU 1000000UL
#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>
#include <string.h>


#define  MrLCDsCrib 			PORTB						// get output from port B
#define  DataDir_MrLCDsCrib		DDRB				 
#define  MrLCDControl			PORTD						// control pin from port D
#define  DataDir_MrLCDControl	DDRD
#define  Enable					4						   	//enable at pin 0 of portD
#define  Read_Write				3							//read write at pin 1
#define  RS						2						//RS value at pin 2 of portD
#define m 122341.012
int len =0;

void check_IF_MrLCD_isBusy(void);							//Functions for many purpose 
void check_on_off(void);							
void Send_A_Command (unsigned char x);
void Send_A_Character ( char Character);
void Send_A_String (char *send_A_string);
void Send_A_Data(unsigned char y);
void display_number(int adc);                               //for displaying numbers

float temprature=0.0,Moisture=0.0;
float luxvalue=0.0;
float ie;
int channel=0;

int main(void)	
{
	DDRA=0b11111111;
	PORTA=0b11110000;
	sei();							//to enable interrupt

	//USART_Init(51,0);													//  USART_Init( 51, uint8_t n )
	ADMUX  |= (0<<ADLAR) | (1<<REFS0) ;		//to get 10 bit result
	ADCSRA |= (1<<ADIE) | (1<<ADEN) | (1<<ADPS2);		
	ADCSRA |= 1<<ADSC;		//to start conversion
	
	DDRE=0xFF;
	TCCR3A |= (1<<COM3A1) | (1<<WGM31);
	TCCR3B |= (1<<WGM32) | (1<<WGM33) | (1<<CS31);
	
	DataDir_MrLCDControl |=1<<Enable | 1<< Read_Write| 1<<RS;			//for checking for ready to fed command
	_delay_ms(15);
	Send_A_Command(0x01);										//clear screen from data sheet of LCD 
	_delay_ms(2);
	Send_A_Command(0x38);										//setting for 8 bit output
	_delay_ms(50);
	Send_A_Command(0x0E);										// x0E=b 00001110
	_delay_ms(50);
		
	//float date=13.022017;
	
while (1)
	{
		Send_A_Command(0x01);
		Send_A_String("Welcome");
		_delay_ms(2000);
		Send_A_Command(0x01);
		Send_A_String("Plant Health ");
		Send_A_Command(0xc0);
		Send_A_String("Monitor");
		_delay_ms(2000);
		Send_A_Command(0x01);
		Send_A_String("Temperature =");
		Send_A_Command(0xc0);
		display_number(temprature);
		_delay_ms(2000);
		Send_A_Command(0x01);
		Send_A_String("Soil Moisture =");
		Send_A_Command(0xc0);
		display_number(Moisture);
		_delay_ms(2000);
		Send_A_Command(0x01);
		Send_A_String("Light Intensity =");
		Send_A_Command(0xc0);
		display_number(luxvalue);
		Send_A_String(" ");
		_delay_ms(2000);
		Send_A_Command(0x01);
									//clear screen from data sheet of LCD
		Send_A_String("air humidity =");
		Send_A_Command(0xc0);
		display_number(60);
		_delay_ms(2000);
		Send_A_Command(0x01);										//clear screen from data sheet of LCD
		Send_A_String("End");
		_delay_ms(2000);
		Send_A_Command(0x01);
		ICR3=19999;
		//if(Moisture==0||Moisture==1)
		//if(Moisture==4||Moisture==5)
		if(Moisture==0||Moisture==1)
		{
			OCR3A=1264;
			_delay_ms(1000);
		}
		
		if(Moisture==4||Moisture==5)
		{
			OCR3A=388;
			_delay_ms(1000);
		}
	}
}

	ISR(ADC_vect)
	{
		
		switch(channel)
		{
			case 0:
			temprature=(ADC*0.0488);
			ADMUX =0x41;
			channel=1;
			break;
			case 1:
			luxvalue=(ADC*0.00488);
			ADMUX = (0x42);
			channel=2;
			break;
			case 2:
			Moisture=ADC*0.00488;
			ADMUX =0x40;
			channel=0;
			break;
		}
		ADCSRA |=1<<ADSC;
	}

	
void check_on_off(void)											//to enable - wait - disable light of LCD
{
	MrLCDControl |= (1<<Enable);		
	asm volatile("nop");
	asm volatile("nop");
	MrLCDControl &= ~(1<<Enable);
	_delay_ms(50);

}

void check_IF_MrLCD_isBusy(void)
{
	DDRB = 0;
	PORTD |= 1<<RS;
	PORTD &= ~(1<<Read_Write);	
	while (PORTB >= 80)
	{
		check_on_off();
	}
	DDRB = 0xFF;
	_delay_ms(50);
}


 void Send_A_Command (unsigned char x)						// to give command to LCD
 {
	 check_IF_MrLCD_isBusy();
	 MrLCDsCrib=x;
	 MrLCDControl &= ~((1<<RS)|(1<<Read_Write));
	 check_on_off();
	 MrLCDsCrib =0;
	 _delay_ms(2);

 }
 
void Send_A_Character (char Character)							// to feed data or character to LCD
{
	check_IF_MrLCD_isBusy();
	MrLCDsCrib= Character;
	MrLCDControl &= ~1<<Read_Write;
	MrLCDControl |= 1<<RS;
	check_on_off();
	MrLCDsCrib =0;
	_delay_ms(50);
}

void Send_A_Data(unsigned char y)

{
	check_IF_MrLCD_isBusy();
	PORTB = y;
	PORTD |= 1<<RS;
	PORTD &= ~(1<<Read_Write);
	check_on_off();
	PORTB = 0;
	_delay_ms(2);
	len++;
	if(len == 16)
	{
		Send_A_Command(0xC0);
	}
	_delay_ms(50);
}

void display_number(int adc)
{
	char value[10];
	itoa(adc,value,10);//changing number into character or string
	//Send_A_Command(0x80);//set cursor at first line
	Send_A_String(value);//displaying number
	_delay_ms(50);
}

void Send_A_String (char *send_A_string)				// to send string to LCD 
{
	while(*send_A_string > 0)
	{
		Send_A_Character(*send_A_string++);				// to get increment of courser position
	}
}
